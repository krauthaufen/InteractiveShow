#!fsharp

#r "nuget: FSharp.Data.Adaptive"
#r "nuget: Adaptify.Core"
#r "nuget: Aardvark.Base"
#r "nuget: Aardvark.Base.FSharp"
#r "nuget: Aardvark.Rendering.GL"
#r "nuget: Aardvark.Application.Slim.GL"
#r "nuget: Aardvark.SceneGraph"
#r "nuget: Aardvark.UI"
#r "nuget: Aardvark.UI.Primitives"
#r "./Aardvark.DotNet.Interactive/bin/Debug/netstandard2.1/Aardvark.DotNet.Interactive.dll"

#!fsharp

// temporary lib code => move to package

open FSharp.Data.Adaptive
open Microsoft.DotNet.Interactive
open Aardvark.Base
open Aardvark.UI
open Aardvark.SceneGraph
open FSharp.Data.Adaptive
open Aardvark.Base.Rendering
open Aardvark.DotNet.Interactive

#!fsharp

let img =
    let img = PixImage<byte>(Col.Format.RGBA, V2i(256, 256))
    let m = 
        img.GetMatrix<C4b>().SetByCoord (fun (c : V2l) ->
            let a = c / 32L
            let v = a.X + a.Y
            if v % 2L = 0L then C4b.White
            else C4b.Gray
        )
    img

markdown "## Show a PixImage"
show img
markdown "## and a `Matrix`"
show (M44f.Rotation(V3f.III, 1.234f))

#!fsharp

markdown "## and other things..."
show V3d.NaN
show (Vector<string> [| "a"; "b"; "c"; "d"; null |])
show (Some V3d.NaN)
show (Some (Some img))

#!fsharp

markdown "## Or a Scenegraph (with camera controller)"
show (
    Sg.box (AVal.constant C4b.Red) (AVal.constant Box3d.Unit) 
    |> Sg.scale 4.0
    |> Sg.diffuseTexture' (PixTexture2d(PixImageMipMap [| img :> PixImage |], true))
    |> Sg.shader {
        do! DefaultSurfaces.trafo
        do! DefaultSurfaces.diffuseTexture
        do! DefaultSurfaces.simpleLighting
    }    
    |> Sg.noEvents,
    width = 1024,
    height = 768
)

show (
    Sg.sphere' 5 C4b.White 1.0
    |> Sg.scale 4.0
    |> Sg.shader {
        do! DefaultSurfaces.trafo
        do! DefaultSurfaces.simpleLighting
    }    
    |> Sg.noEvents,
    width = 1024,
    height = 768
)

show (
    div [] [
        text "asd"
        button [ onClick (fun () -> ()) ] [ text "asdsad" ]

    ]
)
